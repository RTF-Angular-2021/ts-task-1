/** Задача 4
 * Разобраться и описать в чём заключается разница между IFoo и FooType
 * (фактически нужно описать в чём разница между type и interface)
 * + к карме, если приведете примеры
*/
interface IFoo {
    a: number
    b: string
}
 
type FooType = {
    a: number
    b: string
};

/*Следует понимать, что interface - инструмент создания сущностей в контексте ООП.
  Интерфейс это определенный контракт, который обязуется испольнять объект/ класс,
  реализующий этот интерфейс.
*/

class ClsFromInterface implements IFoo{
    a: 12;
    b: '12';
}

let objFromInterface: IFoo = {
    a: 12,
    b: '12',
}

//Класс может реализовывать интерфейс, но класс не может "реализовать type",
//type можно только объявлять.
//Не получится сделать что-то подобное: class Tmp: FooType;

//Однако, тип подобно интерфейсу требует объявлять все поля, присущие данному типу.

let objFromType: FooType = {
    a: 12,
    b: '12'
}

//Пожалуй главное отличие - возможность наследовать интерфейсы.

interface IFoo1 extends IFoo{
    //далее перечисляем собственные поля интерфейса IFoo1.
    prop1: string;
    prop2: number;
}